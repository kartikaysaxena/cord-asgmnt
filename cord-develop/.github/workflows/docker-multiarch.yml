name: docker

on:
  push:
    branches:
      - develop
      - "release*"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      USERNAME: dhiway
      IMAGE_NAME: ${{ github.event.repository.name }}-multiarch-test
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: "${{ secrets.DOCKER_PASSWORD }}"

      - name: Set build profile
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/release*" ]]; then
            echo "BUILD_PROFILE=production" >> $GITHUB_ENV
          else
            echo "BUILD_PROFILE=release" >> $GITHUB_ENV
          fi

      - name: Build and Push to Docker Hub
        run: |
          # Get the branch name
          DOCKER_BRANCH=${{ github.ref }}
          DOCKER_BRANCH=${DOCKER_BRANCH/refs\/heads\//}

          docker buildx create --use
          docker buildx build --no-cache --file docker/Dockerfile --tag ${{ env.IMAGE_NAME}}:$DOCKER_BRANCH --platform linux/amd64,linux/arm64 --build-arg profile=${{ env.BUILD_PROFILE }} --push .

          docker tag \
          ${{ env.IMAGE_NAME}}:$DOCKER_BRANCH \
          ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME}}:${{ env.COMMIT_SHA}} \
          && docker tag \
          ${{ env.IMAGE_NAME}}:$DOCKER_BRANCH \
          ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME}}:$DOCKER_BRANCH \
          && docker tag \
          ${{ env.IMAGE_NAME}}:$DOCKER_BRANCH \
          ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME}}:latest

          docker push ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME}}:$DOCKER_BRANCH
          docker push ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME}}:latest
