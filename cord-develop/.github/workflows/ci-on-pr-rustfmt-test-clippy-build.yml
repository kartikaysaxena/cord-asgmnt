name: ci
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "doc/**"

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

      - name: install rust nightly
        run: rustup toolchain install nightly
      
      - name: show active toolchain
        run: rustup show active-toolchain

      - name: add nightly rustfmt
        run: rustup component add rustfmt --toolchain nightly-x86_64-unknown-linux-gnu

      - name: cache rust toolchain and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-

      - name: rustfmt
        run: cargo +nightly fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    needs: rustfmt
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-

      - name: cargo test
        run: rustup component add rust-src && cargo test --release --all --all-targets --features=runtime-benchmarks --no-fail-fast --verbose --color always

  clippy:
    runs-on: ubuntu-latest
    needs: rustfmt
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-

      - name: cargo clippy
        run: rustup component add rust-src && cargo clippy --all --no-deps --all-targets --features=runtime-benchmarks -- -D warnings

  # build:
  #   runs-on: ubuntu-latest
  #   needs: rustfmt
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v4.1.1
  #     - name: install dependencies
  #       run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

  #     - name: cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cargo/
  #           target/
  #         key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: ${{ runner.os }}-rust-
  #     - name: cargo build
  #       run: rustup component add rust-src && cargo build --locked

